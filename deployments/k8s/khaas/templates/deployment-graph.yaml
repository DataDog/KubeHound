apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ $.Chart.Name }}-graph"
  namespace: {{ $.Release.Namespace }}
  labels:
    app: "{{ $.Chart.Name }}-graph"
    service: {{ $.Chart.Name }}
    chart_version: {{ $.Chart.Version }}
    chart_name: {{ $.Chart.Name }}
    team: {{ $.Values.team }}

spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ $.Chart.Name }}-graph"
  template:
    metadata:
      labels:
        app: "{{ $.Chart.Name }}-graph"
        service: {{ $.Chart.Name }}
        team: {{ $.Values.team }}
        chart_name: {{ $.Chart.Name }}
    spec:
      containers:
      - name: {{ $.Chart.Name }}-graph
        image: "{{ $.Values.services.graph.image }}:{{ $.Values.services.graph.version}}"
        imagePullPolicy: Always
        resources:
          requests:
            cpu: {{ $.Values.services.graph.resources.requests.cpu }}
            memory: {{ $.Values.services.graph.resources.requests.memory }}
          limits:
            cpu: {{ $.Values.services.graph.resources.limits.cpu }}
            memory: {{ $.Values.services.graph.resources.limits.memory }}
        livenessProbe:
          tcpSocket:
            port: graph
          initialDelaySeconds: 60
          periodSeconds: 5
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command: ["/bin/bash", "/etc/janusgraph/readiness.sh"]
          initialDelaySeconds: 60
          periodSeconds: 5
          timeoutSeconds: 5
        ports:
          - name: graph
            containerPort: {{ $.Values.services.graph.port }}
        volumeMounts:
        - name: conf
          mountPath: /etc/janusgraph
      volumes:
        - name: conf
          configMap:
            name: {{ $.Chart.Name }}-graph