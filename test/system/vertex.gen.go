// PLEASE DO NOT EDIT
// THIS HAS BEEN GENERATED AUTOMATICALLY on 2025-09-09 16:04
//
// Generate it with "go generate ./..."
//
// currently support only:
// - nodes
// - pods
// - containers
// - volumes
//
// TODO: roles, rolebinding, clusterrole, clusterrolebindings

package system

import (
	"github.com/DataDog/KubeHound/pkg/kubehound/models/graph"
	"github.com/DataDog/KubeHound/pkg/kubehound/models/shared"
)

var expectedPods = map[string]graph.Pod{
	"control-pod": {
		StoreID:               "",
		Name:                  "control-pod",
		IsNamespaced:          true,
		Namespace:             "default",
		Compromised:           shared.CompromiseNone,
		ServiceAccount:        "default",
		ShareProcessNamespace: false,
		Critical:              false,
	},
	"endpoints-pod": {
		StoreID:               "",
		Name:                  "endpoints-pod",
		IsNamespaced:          true,
		Namespace:             "default",
		Compromised:           shared.CompromiseNone,
		ServiceAccount:        "default",
		ShareProcessNamespace: false,
		Critical:              false,
	},
	"host-read-exploit-pod": {
		StoreID:               "",
		Name:                  "host-read-exploit-pod",
		IsNamespaced:          true,
		Namespace:             "default",
		Compromised:           shared.CompromiseNone,
		ServiceAccount:        "default",
		ShareProcessNamespace: false,
		Critical:              false,
	},
	"host-write-exploit-pod": {
		StoreID:               "",
		Name:                  "host-write-exploit-pod",
		IsNamespaced:          true,
		Namespace:             "default",
		Compromised:           shared.CompromiseNone,
		ServiceAccount:        "default",
		ShareProcessNamespace: false,
		Critical:              false,
	},
	"impersonate-pod": {
		StoreID:               "",
		Name:                  "impersonate-pod",
		IsNamespaced:          true,
		Namespace:             "default",
		Compromised:           shared.CompromiseNone,
		ServiceAccount:        "impersonate-sa",
		ShareProcessNamespace: false,
		Critical:              false,
	},
	"modload-pod": {
		StoreID:               "",
		Name:                  "modload-pod",
		IsNamespaced:          true,
		Namespace:             "default",
		Compromised:           shared.CompromiseNone,
		ServiceAccount:        "default",
		ShareProcessNamespace: false,
		Critical:              false,
	},
	"netadmin-pod": {
		StoreID:               "",
		Name:                  "netadmin-pod",
		IsNamespaced:          true,
		Namespace:             "default",
		Compromised:           shared.CompromiseNone,
		ServiceAccount:        "default",
		ShareProcessNamespace: false,
		Critical:              false,
	},
	"nsenter-pod": {
		StoreID:               "",
		Name:                  "nsenter-pod",
		IsNamespaced:          true,
		Namespace:             "default",
		Compromised:           shared.CompromiseNone,
		ServiceAccount:        "default",
		ShareProcessNamespace: false,
		Critical:              false,
	},
	"pod-create-pod": {
		StoreID:               "",
		Name:                  "pod-create-pod",
		IsNamespaced:          true,
		Namespace:             "default",
		Compromised:           shared.CompromiseNone,
		ServiceAccount:        "pod-create-sa",
		ShareProcessNamespace: false,
		Critical:              false,
	},
	"pod-exec-pod": {
		StoreID:               "",
		Name:                  "pod-exec-pod",
		IsNamespaced:          true,
		Namespace:             "default",
		Compromised:           shared.CompromiseNone,
		ServiceAccount:        "pod-exec-sa",
		ShareProcessNamespace: false,
		Critical:              false,
	},
	"pod-patch-pod": {
		StoreID:               "",
		Name:                  "pod-patch-pod",
		IsNamespaced:          true,
		Namespace:             "default",
		Compromised:           shared.CompromiseNone,
		ServiceAccount:        "pod-patch-sa",
		ShareProcessNamespace: false,
		Critical:              false,
	},
	"priv-pod": {
		StoreID:               "",
		Name:                  "priv-pod",
		IsNamespaced:          true,
		Namespace:             "default",
		Compromised:           shared.CompromiseNone,
		ServiceAccount:        "default",
		ShareProcessNamespace: false,
		Critical:              false,
	},
	"rolebind-pod-crb-cr-crb-cr": {
		StoreID:               "",
		Name:                  "rolebind-pod-crb-cr-crb-cr",
		IsNamespaced:          true,
		Namespace:             "default",
		Compromised:           shared.CompromiseNone,
		ServiceAccount:        "rolebind-sa-crb-cr-crb-cr",
		ShareProcessNamespace: false,
		Critical:              false,
	},
	"rolebind-pod-crb-cr-crb-r-fail": {
		StoreID:               "",
		Name:                  "rolebind-pod-crb-cr-crb-r-fail",
		IsNamespaced:          true,
		Namespace:             "default",
		Compromised:           shared.CompromiseNone,
		ServiceAccount:        "rolebind-sa-crb-cr-crb-r-fail",
		ShareProcessNamespace: false,
		Critical:              false,
	},
	"rolebind-pod-crb-cr-rb-cr": {
		StoreID:               "",
		Name:                  "rolebind-pod-crb-cr-rb-cr",
		IsNamespaced:          true,
		Namespace:             "default",
		Compromised:           shared.CompromiseNone,
		ServiceAccount:        "rolebind-sa-crb-cr-rb-cr",
		ShareProcessNamespace: false,
		Critical:              false,
	},
	"rolebind-pod-crb-cr-rb-r": {
		StoreID:               "",
		Name:                  "rolebind-pod-crb-cr-rb-r",
		IsNamespaced:          true,
		Namespace:             "default",
		Compromised:           shared.CompromiseNone,
		ServiceAccount:        "rolebind-sa-crb-cr-rb-r",
		ShareProcessNamespace: false,
		Critical:              false,
	},
	"rolebind-pod-rb-cr-crb-cr-fail": {
		StoreID:               "",
		Name:                  "rolebind-pod-rb-cr-crb-cr-fail",
		IsNamespaced:          true,
		Namespace:             "default",
		Compromised:           shared.CompromiseNone,
		ServiceAccount:        "rolebind-sa-rb-cr-crb-cr-fail",
		ShareProcessNamespace: false,
		Critical:              false,
	},
	"rolebind-pod-rb-cr-rb-cr": {
		StoreID:               "",
		Name:                  "rolebind-pod-rb-cr-rb-cr",
		IsNamespaced:          true,
		Namespace:             "default",
		Compromised:           shared.CompromiseNone,
		ServiceAccount:        "rolebind-sa-rb-cr-rb-cr",
		ShareProcessNamespace: false,
		Critical:              false,
	},
	"rolebind-pod-rb-cr-rb-r": {
		StoreID:               "",
		Name:                  "rolebind-pod-rb-cr-rb-r",
		IsNamespaced:          true,
		Namespace:             "default",
		Compromised:           shared.CompromiseNone,
		ServiceAccount:        "rolebind-sa-rb-cr-rb-r",
		ShareProcessNamespace: false,
		Critical:              false,
	},
	"rolebind-pod-rb-r-crb-cr-fail": {
		StoreID:               "",
		Name:                  "rolebind-pod-rb-r-crb-cr-fail",
		IsNamespaced:          true,
		Namespace:             "default",
		Compromised:           shared.CompromiseNone,
		ServiceAccount:        "rolebind-sa-rb-r-crb-cr-fail",
		ShareProcessNamespace: false,
		Critical:              false,
	},
	"rolebind-pod-rb-r-rb-crb": {
		StoreID:               "",
		Name:                  "rolebind-pod-rb-r-rb-crb",
		IsNamespaced:          true,
		Namespace:             "default",
		Compromised:           shared.CompromiseNone,
		ServiceAccount:        "rolebind-sa-rb-r-rb-crb",
		ShareProcessNamespace: false,
		Critical:              false,
	},
	"rolebind-pod-rb-r-rb-r": {
		StoreID:               "",
		Name:                  "rolebind-pod-rb-r-rb-r",
		IsNamespaced:          true,
		Namespace:             "default",
		Compromised:           shared.CompromiseNone,
		ServiceAccount:        "rolebind-sa-rb-r-rb-r",
		ShareProcessNamespace: false,
		Critical:              false,
	},
	"sharedps-pod1": {
		StoreID:               "",
		Name:                  "sharedps-pod1",
		IsNamespaced:          true,
		Namespace:             "default",
		Compromised:           shared.CompromiseNone,
		ServiceAccount:        "default",
		ShareProcessNamespace: true,
		Critical:              false,
	},
	"sharedps-pod2": {
		StoreID:               "",
		Name:                  "sharedps-pod2",
		IsNamespaced:          true,
		Namespace:             "default",
		Compromised:           shared.CompromiseNone,
		ServiceAccount:        "default",
		ShareProcessNamespace: true,
		Critical:              false,
	},
	"sys-ptrace-pod": {
		StoreID:               "",
		Name:                  "sys-ptrace-pod",
		IsNamespaced:          true,
		Namespace:             "default",
		Compromised:           shared.CompromiseNone,
		ServiceAccount:        "default",
		ShareProcessNamespace: false,
		Critical:              false,
	},
	"tokenget-pod": {
		StoreID:               "",
		Name:                  "tokenget-pod",
		IsNamespaced:          true,
		Namespace:             "default",
		Compromised:           shared.CompromiseNone,
		ServiceAccount:        "tokenget-sa",
		ShareProcessNamespace: false,
		Critical:              false,
	},
	"tokenlist-pod": {
		StoreID:               "",
		Name:                  "tokenlist-pod",
		IsNamespaced:          true,
		Namespace:             "default",
		Compromised:           shared.CompromiseNone,
		ServiceAccount:        "tokenlist-sa",
		ShareProcessNamespace: false,
		Critical:              false,
	},
	"umh-core-pod": {
		StoreID:               "",
		Name:                  "umh-core-pod",
		IsNamespaced:          true,
		Namespace:             "default",
		Compromised:           shared.CompromiseNone,
		ServiceAccount:        "default",
		ShareProcessNamespace: false,
		Critical:              false,
	},
	"varlog-pod": {
		StoreID:               "",
		Name:                  "varlog-pod",
		IsNamespaced:          true,
		Namespace:             "default",
		Compromised:           shared.CompromiseNone,
		ServiceAccount:        "varlog-sa",
		ShareProcessNamespace: false,
		Critical:              false,
	},
	"vault-pod": {
		StoreID:               "",
		Name:                  "vault-pod",
		IsNamespaced:          true,
		Namespace:             "vault",
		Compromised:           shared.CompromiseNone,
		ServiceAccount:        "default",
		ShareProcessNamespace: false,
		Critical:              false,
	},
}

var expectedNodes = map[string]graph.Node{
	"kubehound.test.local-control-plane": {
		StoreID:      "",
		Name:         "kubehound.test.local-control-plane",
		IsNamespaced: false,
		Namespace:    "",
		Compromised:  shared.CompromiseNone,
		Critical:     false,
	},
	"kubehound.test.local-worker": {
		StoreID:      "",
		Name:         "kubehound.test.local-worker",
		IsNamespaced: false,
		Namespace:    "",
		Compromised:  shared.CompromiseNone,
		Critical:     false,
	},
	"kubehound.test.local-worker2": {
		StoreID:      "",
		Name:         "kubehound.test.local-worker2",
		IsNamespaced: false,
		Namespace:    "",
		Compromised:  shared.CompromiseNone,
		Critical:     false,
	},
}

var expectedVolumes = map[string]graph.Volume{
	"host-pod-dir": {
		StoreID:    "",
		Name:       "host-pod-dir",
		Type:       "",
		SourcePath: "",
		MountPath:  "/hostpods/",
		Readonly:   true,
		Namespace:  "default",
	},
	"host-ssh": {
		StoreID:    "",
		Name:       "host-ssh",
		Type:       "",
		SourcePath: "",
		MountPath:  "/hostssh/",
		Readonly:   true,
		Namespace:  "default",
	},
	"hostroot": {
		StoreID:    "",
		Name:       "hostroot",
		Type:       "",
		SourcePath: "",
		MountPath:  "/host/",
		Readonly:   false,
		Namespace:  "default",
	},
	"nodelog": {
		StoreID:    "",
		Name:       "nodelog",
		Type:       "",
		SourcePath: "",
		MountPath:  "/host/var/log",
		Readonly:   false,
		Namespace:  "default",
	},
	"nodeproc": {
		StoreID:    "",
		Name:       "nodeproc",
		Type:       "",
		SourcePath: "",
		MountPath:  "/sysproc",
		Readonly:   false,
		Namespace:  "default",
	},
}

var expectedContainers = map[string]graph.Container{
	"control-pod": {
		StoreID:      "",
		Name:         "control-pod",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   false,
		PrivEsc:      false,
		HostPID:      false,
		HostIPC:      false,
		HostNetwork:  false,
		RunAsUser:    0,
		Namespace:    "default",
		Ports:        []string{},
		Pod:          "control-pod",
		// Node:         "",
		Compromised: 0,
	},
	"endpoints-pod": {
		StoreID:      "",
		Name:         "endpoints-pod",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   true,
		PrivEsc:      false,
		HostPID:      true,
		HostIPC:      false,
		HostNetwork:  false,
		RunAsUser:    0,
		Namespace:    "default",
		Ports:        []string{},
		Pod:          "endpoints-pod",
		// Node:         "",
		Compromised: 0,
	},
	"host-read-exploit-pod": {
		StoreID:      "",
		Name:         "host-read-exploit-pod",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   false,
		PrivEsc:      false,
		HostPID:      false,
		HostIPC:      false,
		HostNetwork:  false,
		RunAsUser:    0,
		Namespace:    "default",
		Ports:        []string{},
		Pod:          "host-read-exploit-pod",
		// Node:         "",
		Compromised: 0,
	},
	"host-write-exploit-pod": {
		StoreID:      "",
		Name:         "host-write-exploit-pod",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   false,
		PrivEsc:      false,
		HostPID:      false,
		HostIPC:      false,
		HostNetwork:  false,
		RunAsUser:    0,
		Namespace:    "default",
		Ports:        []string{},
		Pod:          "host-write-exploit-pod",
		// Node:         "",
		Compromised: 0,
	},
	"impersonate-pod": {
		StoreID:      "",
		Name:         "impersonate-pod",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   false,
		PrivEsc:      false,
		HostPID:      false,
		HostIPC:      false,
		HostNetwork:  false,
		RunAsUser:    0,
		Namespace:    "default",
		Ports:        []string{},
		Pod:          "impersonate-pod",
		// Node:         "",
		Compromised: 0,
	},
	"modload-pod": {
		StoreID:      "",
		Name:         "modload-pod",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   false,
		PrivEsc:      false,
		HostPID:      false,
		HostIPC:      false,
		HostNetwork:  false,
		RunAsUser:    0,
		Namespace:    "default",
		Ports:        []string{},
		Pod:          "modload-pod",
		// Node:         "",
		Compromised: 0,
	},
	"netadmin-pod": {
		StoreID:      "",
		Name:         "netadmin-pod",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   false,
		PrivEsc:      false,
		HostPID:      false,
		HostIPC:      false,
		HostNetwork:  true,
		RunAsUser:    0,
		Namespace:    "default",
		Ports:        []string{},
		Pod:          "netadmin-pod",
		// Node:         "",
		Compromised: 0,
	},
	"nsenter-pod": {
		StoreID:      "",
		Name:         "nsenter-pod",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   true,
		PrivEsc:      false,
		HostPID:      true,
		HostIPC:      false,
		HostNetwork:  false,
		RunAsUser:    0,
		Namespace:    "default",
		Ports:        []string{},
		Pod:          "nsenter-pod",
		// Node:         "",
		Compromised: 0,
	},
	"pod-create-pod": {
		StoreID:      "",
		Name:         "pod-create-pod",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   false,
		PrivEsc:      false,
		HostPID:      false,
		HostIPC:      false,
		HostNetwork:  false,
		RunAsUser:    0,
		Namespace:    "default",
		Ports:        []string{},
		Pod:          "pod-create-pod",
		// Node:         "",
		Compromised: 0,
	},
	"pod-exec-pod": {
		StoreID:      "",
		Name:         "pod-exec-pod",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   false,
		PrivEsc:      false,
		HostPID:      false,
		HostIPC:      false,
		HostNetwork:  false,
		RunAsUser:    0,
		Namespace:    "default",
		Ports:        []string{},
		Pod:          "pod-exec-pod",
		// Node:         "",
		Compromised: 0,
	},
	"pod-patch-pod": {
		StoreID:      "",
		Name:         "pod-patch-pod",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   false,
		PrivEsc:      false,
		HostPID:      false,
		HostIPC:      false,
		HostNetwork:  false,
		RunAsUser:    0,
		Namespace:    "default",
		Ports:        []string{},
		Pod:          "pod-patch-pod",
		// Node:         "",
		Compromised: 0,
	},
	"priv-pod": {
		StoreID:      "",
		Name:         "priv-pod",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   true,
		PrivEsc:      false,
		HostPID:      false,
		HostIPC:      false,
		HostNetwork:  false,
		RunAsUser:    0,
		Namespace:    "default",
		Ports:        []string{},
		Pod:          "priv-pod",
		// Node:         "",
		Compromised: 0,
	},
	"rolebind-pod-crb-cr-crb-cr": {
		StoreID:      "",
		Name:         "rolebind-pod-crb-cr-crb-cr",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   false,
		PrivEsc:      false,
		HostPID:      false,
		HostIPC:      false,
		HostNetwork:  false,
		RunAsUser:    0,
		Namespace:    "default",
		Ports:        []string{},
		Pod:          "rolebind-pod-crb-cr-crb-cr",
		// Node:         "",
		Compromised: 0,
	},
	"rolebind-pod-crb-cr-crb-r-fail": {
		StoreID:      "",
		Name:         "rolebind-pod-crb-cr-crb-r-fail",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   false,
		PrivEsc:      false,
		HostPID:      false,
		HostIPC:      false,
		HostNetwork:  false,
		RunAsUser:    0,
		Namespace:    "default",
		Ports:        []string{},
		Pod:          "rolebind-pod-crb-cr-crb-r-fail",
		// Node:         "",
		Compromised: 0,
	},
	"rolebind-pod-crb-cr-rb-cr": {
		StoreID:      "",
		Name:         "rolebind-pod-crb-cr-rb-cr",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   false,
		PrivEsc:      false,
		HostPID:      false,
		HostIPC:      false,
		HostNetwork:  false,
		RunAsUser:    0,
		Namespace:    "default",
		Ports:        []string{},
		Pod:          "rolebind-pod-crb-cr-rb-cr",
		// Node:         "",
		Compromised: 0,
	},
	"rolebind-pod-crb-cr-rb-r": {
		StoreID:      "",
		Name:         "rolebind-pod-crb-cr-rb-r",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   false,
		PrivEsc:      false,
		HostPID:      false,
		HostIPC:      false,
		HostNetwork:  false,
		RunAsUser:    0,
		Namespace:    "default",
		Ports:        []string{},
		Pod:          "rolebind-pod-crb-cr-rb-r",
		// Node:         "",
		Compromised: 0,
	},
	"rolebind-pod-rb-cr-crb-cr-fail": {
		StoreID:      "",
		Name:         "rolebind-pod-rb-cr-crb-cr-fail",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   false,
		PrivEsc:      false,
		HostPID:      false,
		HostIPC:      false,
		HostNetwork:  false,
		RunAsUser:    0,
		Namespace:    "default",
		Ports:        []string{},
		Pod:          "rolebind-pod-rb-cr-crb-cr-fail",
		// Node:         "",
		Compromised: 0,
	},
	"rolebind-pod-rb-cr-rb-cr": {
		StoreID:      "",
		Name:         "rolebind-pod-rb-cr-rb-cr",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   false,
		PrivEsc:      false,
		HostPID:      false,
		HostIPC:      false,
		HostNetwork:  false,
		RunAsUser:    0,
		Namespace:    "default",
		Ports:        []string{},
		Pod:          "rolebind-pod-rb-cr-rb-cr",
		// Node:         "",
		Compromised: 0,
	},
	"rolebind-pod-rb-cr-rb-r": {
		StoreID:      "",
		Name:         "rolebind-pod-rb-cr-rb-r",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   false,
		PrivEsc:      false,
		HostPID:      false,
		HostIPC:      false,
		HostNetwork:  false,
		RunAsUser:    0,
		Namespace:    "default",
		Ports:        []string{},
		Pod:          "rolebind-pod-rb-cr-rb-r",
		// Node:         "",
		Compromised: 0,
	},
	"rolebind-pod-rb-r-crb-cr-fail": {
		StoreID:      "",
		Name:         "rolebind-pod-rb-r-crb-cr-fail",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   false,
		PrivEsc:      false,
		HostPID:      false,
		HostIPC:      false,
		HostNetwork:  false,
		RunAsUser:    0,
		Namespace:    "default",
		Ports:        []string{},
		Pod:          "rolebind-pod-rb-r-crb-cr-fail",
		// Node:         "",
		Compromised: 0,
	},
	"rolebind-pod-rb-r-rb-crb": {
		StoreID:      "",
		Name:         "rolebind-pod-rb-r-rb-crb",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   false,
		PrivEsc:      false,
		HostPID:      false,
		HostIPC:      false,
		HostNetwork:  false,
		RunAsUser:    0,
		Namespace:    "default",
		Ports:        []string{},
		Pod:          "rolebind-pod-rb-r-rb-crb",
		// Node:         "",
		Compromised: 0,
	},
	"rolebind-pod-rb-r-rb-r": {
		StoreID:      "",
		Name:         "rolebind-pod-rb-r-rb-r",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   false,
		PrivEsc:      false,
		HostPID:      false,
		HostIPC:      false,
		HostNetwork:  false,
		RunAsUser:    0,
		Namespace:    "default",
		Ports:        []string{},
		Pod:          "rolebind-pod-rb-r-rb-r",
		// Node:         "",
		Compromised: 0,
	},
	"sharedps-pod1-a": {
		StoreID:      "",
		Name:         "sharedps-pod1-a",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   false,
		PrivEsc:      false,
		HostPID:      false,
		HostIPC:      false,
		HostNetwork:  false,
		RunAsUser:    0,
		Namespace:    "default",
		Ports:        []string{},
		Pod:          "sharedps-pod1",
		// Node:         "",
		Compromised: 0,
	},
	"sharedps-pod1-b": {
		StoreID:      "",
		Name:         "sharedps-pod1-b",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   false,
		PrivEsc:      false,
		HostPID:      false,
		HostIPC:      false,
		HostNetwork:  false,
		RunAsUser:    0,
		Namespace:    "default",
		Ports:        []string{},
		Pod:          "sharedps-pod1",
		// Node:         "",
		Compromised: 0,
	},
	"sharedps-pod1-c": {
		StoreID:      "",
		Name:         "sharedps-pod1-c",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   false,
		PrivEsc:      false,
		HostPID:      false,
		HostIPC:      false,
		HostNetwork:  false,
		RunAsUser:    0,
		Namespace:    "default",
		Ports:        []string{},
		Pod:          "sharedps-pod1",
		// Node:         "",
		Compromised: 0,
	},
	"sharedps-pod2-a": {
		StoreID:      "",
		Name:         "sharedps-pod2-a",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   false,
		PrivEsc:      false,
		HostPID:      false,
		HostIPC:      false,
		HostNetwork:  false,
		RunAsUser:    0,
		Namespace:    "default",
		Ports:        []string{},
		Pod:          "sharedps-pod2",
		// Node:         "",
		Compromised: 0,
	},
	"sharedps-pod2-b": {
		StoreID:      "",
		Name:         "sharedps-pod2-b",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   false,
		PrivEsc:      false,
		HostPID:      false,
		HostIPC:      false,
		HostNetwork:  false,
		RunAsUser:    0,
		Namespace:    "default",
		Ports:        []string{},
		Pod:          "sharedps-pod2",
		// Node:         "",
		Compromised: 0,
	},
	"sys-ptrace-pod": {
		StoreID:      "",
		Name:         "sys-ptrace-pod",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   false,
		PrivEsc:      false,
		HostPID:      true,
		HostIPC:      false,
		HostNetwork:  false,
		RunAsUser:    0,
		Namespace:    "default",
		Ports:        []string{},
		Pod:          "sys-ptrace-pod",
		// Node:         "",
		Compromised: 0,
	},
	"tokenget-pod": {
		StoreID:      "",
		Name:         "tokenget-pod",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   false,
		PrivEsc:      false,
		HostPID:      false,
		HostIPC:      false,
		HostNetwork:  false,
		RunAsUser:    0,
		Namespace:    "default",
		Ports:        []string{},
		Pod:          "tokenget-pod",
		// Node:         "",
		Compromised: 0,
	},
	"tokenlist-pod": {
		StoreID:      "",
		Name:         "tokenlist-pod",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   false,
		PrivEsc:      false,
		HostPID:      false,
		HostIPC:      false,
		HostNetwork:  false,
		RunAsUser:    0,
		Namespace:    "default",
		Ports:        []string{},
		Pod:          "tokenlist-pod",
		// Node:         "",
		Compromised: 0,
	},
	"umh-core-container": {
		StoreID:      "",
		Name:         "umh-core-container",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   false,
		PrivEsc:      false,
		HostPID:      false,
		HostIPC:      false,
		HostNetwork:  false,
		RunAsUser:    0,
		Namespace:    "default",
		Ports:        []string{},
		Pod:          "umh-core-pod",
		// Node:         "",
		Compromised: 0,
	},
	"varlog-container": {
		StoreID:      "",
		Name:         "varlog-container",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   false,
		PrivEsc:      false,
		HostPID:      false,
		HostIPC:      false,
		HostNetwork:  false,
		RunAsUser:    0,
		Namespace:    "default",
		Ports:        []string{},
		Pod:          "varlog-pod",
		// Node:         "",
		Compromised: 0,
	},
	"vault-pod": {
		StoreID:      "",
		Name:         "vault-pod",
		Image:        "ubuntu",
		Command:      []string{},
		Args:         []string{},
		Capabilities: []string{},
		Privileged:   false,
		PrivEsc:      false,
		HostPID:      false,
		HostIPC:      false,
		HostNetwork:  false,
		RunAsUser:    0,
		Namespace:    "vault",
		Ports:        []string{},
		Pod:          "vault-pod",
		// Node:         "",
		Compromised: 0,
	},
}

var expectedPermissionSets = map[string]graph.PermissionSet{
	"create-pods::pod-create-pods": {
		StoreID:      "",
		Name:         "create-pods::pod-create-pods",
		IsNamespaced: true,
		Namespace:    "default",
		Role:         "create-pods",
		Rules:        []string{"API(*)::R(pods)::N()::V(get,list,create)"},
		RoleBinding:  "pod-create-pods",
		Critical:     false,
	},
	"exec-pods::pod-exec-pods": {
		StoreID:      "",
		Name:         "exec-pods::pod-exec-pods",
		IsNamespaced: true,
		Namespace:    "default",
		Role:         "exec-pods",
		Rules:        []string{"API()::R(pods,pods/log)::N()::V(get,list)", "API()::R(pods/exec)::N()::V(create)"},
		RoleBinding:  "pod-exec-pods",
		Critical:     false,
	},
	"impersonate::pod-impersonate": {
		StoreID:      "",
		Name:         "impersonate::pod-impersonate",
		IsNamespaced: true,
		Namespace:    "default",
		Role:         "impersonate",
		Rules:        []string{"API(*)::R(users,groups)::N()::V(impersonate)"},
		RoleBinding:  "pod-impersonate",
		Critical:     false,
	},
	"list-secrets::pod-list-secrets": {
		StoreID:      "",
		Name:         "list-secrets::pod-list-secrets",
		IsNamespaced: true,
		Namespace:    "default",
		Role:         "list-secrets",
		Rules:        []string{"API(*)::R(secrets)::N()::V(list)"},
		RoleBinding:  "pod-list-secrets",
		Critical:     false,
	},
	"patch-pods::pod-patch-pods": {
		StoreID:      "",
		Name:         "patch-pods::pod-patch-pods",
		IsNamespaced: true,
		Namespace:    "default",
		Role:         "patch-pods",
		Rules:        []string{"API(*)::R(pods)::N()::V(get,list,patch)"},
		RoleBinding:  "pod-patch-pods",
		Critical:     false,
	},
	"read-logs::pod-read-logs": {
		StoreID:      "",
		Name:         "read-logs::pod-read-logs",
		IsNamespaced: true,
		Namespace:    "default",
		Role:         "read-logs",
		Rules:        []string{"API()::R(pods/log,pods,nodes,nodes/log)::N()::V(get,list)"},
		RoleBinding:  "pod-read-logs",
		Critical:     false,
	},
	"read-secrets::pod-get-secrets": {
		StoreID:      "",
		Name:         "read-secrets::pod-get-secrets",
		IsNamespaced: true,
		Namespace:    "default",
		Role:         "read-secrets",
		Rules:        []string{"API(*)::R(secrets)::N()::V(get)"},
		RoleBinding:  "pod-get-secrets",
		Critical:     false,
	},
	"rolebind-rb-cr-crb-cr-fail::pod-bind-role-rb-cr-crb-cr-fail": {
		StoreID:      "",
		Name:         "rolebind-rb-cr-crb-cr-fail::pod-bind-role-rb-cr-crb-cr-fail",
		IsNamespaced: true,
		Namespace:    "default",
		Role:         "rolebind-rb-cr-crb-cr-fail",
		Rules:        []string{"API(rbac.authorization.k8s.io)::R(clusterrolebindings)::N()::V(create)", "API(rbac.authorization.k8s.io)::R(clusterroles)::N()::V(bind)"},
		RoleBinding:  "pod-bind-role-rb-cr-crb-cr-fail",
		Critical:     false,
	},
	"rolebind-rb-cr-rb-cr::pod-bind-role-rb-cr-rb-cr": {
		StoreID:      "",
		Name:         "rolebind-rb-cr-rb-cr::pod-bind-role-rb-cr-rb-cr",
		IsNamespaced: true,
		Namespace:    "default",
		Role:         "rolebind-rb-cr-rb-cr",
		Rules:        []string{"API(rbac.authorization.k8s.io)::R(rolebindings)::N()::V(create)", "API(rbac.authorization.k8s.io)::R(clusterroles)::N()::V(bind)"},
		RoleBinding:  "pod-bind-role-rb-cr-rb-cr",
		Critical:     false,
	},
	"rolebind-rb-cr-rb-r::pod-bind-role-rb-cr-rb-r": {
		StoreID:      "",
		Name:         "rolebind-rb-cr-rb-r::pod-bind-role-rb-cr-rb-r",
		IsNamespaced: true,
		Namespace:    "default",
		Role:         "rolebind-rb-cr-rb-r",
		Rules:        []string{"API(rbac.authorization.k8s.io)::R(rolebindings)::N()::V(create)", "API(rbac.authorization.k8s.io)::R(roles)::N()::V(bind)"},
		RoleBinding:  "pod-bind-role-rb-cr-rb-r",
		Critical:     false,
	},
	"rolebind-rb-r-crb-cr-fail::pod-bind-role-rb-r-crb-cr-fail": {
		StoreID:      "",
		Name:         "rolebind-rb-r-crb-cr-fail::pod-bind-role-rb-r-crb-cr-fail",
		IsNamespaced: true,
		Namespace:    "default",
		Role:         "rolebind-rb-r-crb-cr-fail",
		Rules:        []string{"API(rbac.authorization.k8s.io)::R(clusterrolebindings)::N()::V(create)", "API(rbac.authorization.k8s.io)::R(clusterroles)::N()::V(bind)"},
		RoleBinding:  "pod-bind-role-rb-r-crb-cr-fail",
		Critical:     false,
	},
	"rolebind-rb-r-crb-cr-fail::pod-bind-role-rb-r-crb-cr-fail-g": {
		StoreID:      "",
		Name:         "rolebind-rb-r-crb-cr-fail::pod-bind-role-rb-r-crb-cr-fail-g",
		IsNamespaced: true,
		Namespace:    "default",
		Role:         "rolebind-rb-r-crb-cr-fail",
		Rules:        []string{"API(rbac.authorization.k8s.io)::R(clusterrolebindings)::N()::V(create)", "API(rbac.authorization.k8s.io)::R(clusterroles)::N()::V(bind)"},
		RoleBinding:  "pod-bind-role-rb-r-crb-cr-fail-g",
		Critical:     false,
	},
	"rolebind-rb-r-crb-cr-fail::pod-bind-role-rb-r-crb-cr-fail-u": {
		StoreID:      "",
		Name:         "rolebind-rb-r-crb-cr-fail::pod-bind-role-rb-r-crb-cr-fail-u",
		IsNamespaced: true,
		Namespace:    "default",
		Role:         "rolebind-rb-r-crb-cr-fail",
		Rules:        []string{"API(rbac.authorization.k8s.io)::R(clusterrolebindings)::N()::V(create)", "API(rbac.authorization.k8s.io)::R(clusterroles)::N()::V(bind)"},
		RoleBinding:  "pod-bind-role-rb-r-crb-cr-fail-u",
		Critical:     false,
	},
	"rolebind-rb-r-rb-crb::pod-bind-role-rb-r-rb-crb": {
		StoreID:      "",
		Name:         "rolebind-rb-r-rb-crb::pod-bind-role-rb-r-rb-crb",
		IsNamespaced: true,
		Namespace:    "default",
		Role:         "rolebind-rb-r-rb-crb",
		Rules:        []string{"API(rbac.authorization.k8s.io)::R(rolebindings)::N()::V(create)", "API(rbac.authorization.k8s.io)::R(clusterroles)::N()::V(bind)"},
		RoleBinding:  "pod-bind-role-rb-r-rb-crb",
		Critical:     false,
	},
	"rolebind-rb-r-rb-crb::pod-bind-role-rb-r-rb-crb-g": {
		StoreID:      "",
		Name:         "rolebind-rb-r-rb-crb::pod-bind-role-rb-r-rb-crb-g",
		IsNamespaced: true,
		Namespace:    "default",
		Role:         "rolebind-rb-r-rb-crb",
		Rules:        []string{"API(rbac.authorization.k8s.io)::R(rolebindings)::N()::V(create)", "API(rbac.authorization.k8s.io)::R(clusterroles)::N()::V(bind)"},
		RoleBinding:  "pod-bind-role-rb-r-rb-crb-g",
		Critical:     false,
	},
	"rolebind-rb-r-rb-crb::pod-bind-role-rb-r-rb-crb-u": {
		StoreID:      "",
		Name:         "rolebind-rb-r-rb-crb::pod-bind-role-rb-r-rb-crb-u",
		IsNamespaced: true,
		Namespace:    "default",
		Role:         "rolebind-rb-r-rb-crb",
		Rules:        []string{"API(rbac.authorization.k8s.io)::R(rolebindings)::N()::V(create)", "API(rbac.authorization.k8s.io)::R(clusterroles)::N()::V(bind)"},
		RoleBinding:  "pod-bind-role-rb-r-rb-crb-u",
		Critical:     false,
	},
	"rolebind-rb-r-rb-r::pod-bind-role-rb-r-rb-r": {
		StoreID:      "",
		Name:         "rolebind-rb-r-rb-r::pod-bind-role-rb-r-rb-r",
		IsNamespaced: true,
		Namespace:    "default",
		Role:         "rolebind-rb-r-rb-r",
		Rules:        []string{"API(rbac.authorization.k8s.io)::R(rolebindings)::N()::V(create)", "API(rbac.authorization.k8s.io)::R(roles)::N()::V(bind)"},
		RoleBinding:  "pod-bind-role-rb-r-rb-r",
		Critical:     false,
	},
	"rolebind-rb-r-rb-r::pod-bind-role-rb-r-rb-r-g": {
		StoreID:      "",
		Name:         "rolebind-rb-r-rb-r::pod-bind-role-rb-r-rb-r-g",
		IsNamespaced: true,
		Namespace:    "default",
		Role:         "rolebind-rb-r-rb-r",
		Rules:        []string{"API(rbac.authorization.k8s.io)::R(rolebindings)::N()::V(create)", "API(rbac.authorization.k8s.io)::R(roles)::N()::V(bind)"},
		RoleBinding:  "pod-bind-role-rb-r-rb-r-g",
		Critical:     false,
	},
	"rolebind-rb-r-rb-r::pod-bind-role-rb-r-rb-r-u": {
		StoreID:      "",
		Name:         "rolebind-rb-r-rb-r::pod-bind-role-rb-r-rb-r-u",
		IsNamespaced: true,
		Namespace:    "default",
		Role:         "rolebind-rb-r-rb-r",
		Rules:        []string{"API(rbac.authorization.k8s.io)::R(rolebindings)::N()::V(create)", "API(rbac.authorization.k8s.io)::R(roles)::N()::V(bind)"},
		RoleBinding:  "pod-bind-role-rb-r-rb-r-u",
		Critical:     false,
	},
}

var expectedIdentities = map[string]graph.Identity{
	"group-rb-r-crb-cr-fail": {
		StoreID:      "",
		Name:         "group-rb-r-crb-cr-fail",
		IsNamespaced: false,
		Namespace:    "",
		Type:         "Group",
		Critical:     false,
	},
	"group-rb-r-rb-crb": {
		StoreID:      "",
		Name:         "group-rb-r-rb-crb",
		IsNamespaced: false,
		Namespace:    "",
		Type:         "Group",
		Critical:     false,
	},
	"group-rb-r-rb-r": {
		StoreID:      "",
		Name:         "group-rb-r-rb-r",
		IsNamespaced: false,
		Namespace:    "",
		Type:         "Group",
		Critical:     false,
	},
	"impersonate-sa": {
		StoreID:      "",
		Name:         "impersonate-sa",
		IsNamespaced: true,
		Namespace:    "default",
		Type:         "ServiceAccount",
		Critical:     false,
	},
	"pod-create-sa": {
		StoreID:      "",
		Name:         "pod-create-sa",
		IsNamespaced: true,
		Namespace:    "default",
		Type:         "ServiceAccount",
		Critical:     false,
	},
	"pod-exec-sa": {
		StoreID:      "",
		Name:         "pod-exec-sa",
		IsNamespaced: true,
		Namespace:    "default",
		Type:         "ServiceAccount",
		Critical:     false,
	},
	"pod-patch-sa": {
		StoreID:      "",
		Name:         "pod-patch-sa",
		IsNamespaced: true,
		Namespace:    "default",
		Type:         "ServiceAccount",
		Critical:     false,
	},
	"rolebind-sa-crb-cr-crb-cr": {
		StoreID:      "",
		Name:         "rolebind-sa-crb-cr-crb-cr",
		IsNamespaced: true,
		Namespace:    "default",
		Type:         "ServiceAccount",
		Critical:     false,
	},
	"rolebind-sa-crb-cr-crb-r-fail": {
		StoreID:      "",
		Name:         "rolebind-sa-crb-cr-crb-r-fail",
		IsNamespaced: true,
		Namespace:    "default",
		Type:         "ServiceAccount",
		Critical:     false,
	},
	"rolebind-sa-crb-cr-rb-cr": {
		StoreID:      "",
		Name:         "rolebind-sa-crb-cr-rb-cr",
		IsNamespaced: true,
		Namespace:    "default",
		Type:         "ServiceAccount",
		Critical:     false,
	},
	"rolebind-sa-crb-cr-rb-r": {
		StoreID:      "",
		Name:         "rolebind-sa-crb-cr-rb-r",
		IsNamespaced: true,
		Namespace:    "default",
		Type:         "ServiceAccount",
		Critical:     false,
	},
	"rolebind-sa-rb-cr-crb-cr-fail": {
		StoreID:      "",
		Name:         "rolebind-sa-rb-cr-crb-cr-fail",
		IsNamespaced: true,
		Namespace:    "default",
		Type:         "ServiceAccount",
		Critical:     false,
	},
	"rolebind-sa-rb-cr-rb-cr": {
		StoreID:      "",
		Name:         "rolebind-sa-rb-cr-rb-cr",
		IsNamespaced: true,
		Namespace:    "default",
		Type:         "ServiceAccount",
		Critical:     false,
	},
	"rolebind-sa-rb-cr-rb-r": {
		StoreID:      "",
		Name:         "rolebind-sa-rb-cr-rb-r",
		IsNamespaced: true,
		Namespace:    "default",
		Type:         "ServiceAccount",
		Critical:     false,
	},
	"rolebind-sa-rb-r-crb-cr-fail": {
		StoreID:      "",
		Name:         "rolebind-sa-rb-r-crb-cr-fail",
		IsNamespaced: true,
		Namespace:    "default",
		Type:         "ServiceAccount",
		Critical:     false,
	},
	"rolebind-sa-rb-r-rb-crb": {
		StoreID:      "",
		Name:         "rolebind-sa-rb-r-rb-crb",
		IsNamespaced: true,
		Namespace:    "default",
		Type:         "ServiceAccount",
		Critical:     false,
	},
	"rolebind-sa-rb-r-rb-r": {
		StoreID:      "",
		Name:         "rolebind-sa-rb-r-rb-r",
		IsNamespaced: true,
		Namespace:    "default",
		Type:         "ServiceAccount",
		Critical:     false,
	},
	"system:nodes": {
		StoreID:      "",
		Name:         "system:nodes",
		IsNamespaced: false,
		Namespace:    "",
		Type:         "Group",
		Critical:     false,
	},
	"tokenget-sa": {
		StoreID:      "",
		Name:         "tokenget-sa",
		IsNamespaced: true,
		Namespace:    "default",
		Type:         "ServiceAccount",
		Critical:     false,
	},
	"tokenlist-sa": {
		StoreID:      "",
		Name:         "tokenlist-sa",
		IsNamespaced: true,
		Namespace:    "default",
		Type:         "ServiceAccount",
		Critical:     false,
	},
	"user-rb-r-crb-cr-fail": {
		StoreID:      "",
		Name:         "user-rb-r-crb-cr-fail",
		IsNamespaced: false,
		Namespace:    "",
		Type:         "User",
		Critical:     false,
	},
	"user-rb-r-rb-crb": {
		StoreID:      "",
		Name:         "user-rb-r-rb-crb",
		IsNamespaced: false,
		Namespace:    "",
		Type:         "User",
		Critical:     false,
	},
	"user-rb-r-rb-r": {
		StoreID:      "",
		Name:         "user-rb-r-rb-r",
		IsNamespaced: false,
		Namespace:    "",
		Type:         "User",
		Critical:     false,
	},
	"varlog-sa": {
		StoreID:      "",
		Name:         "varlog-sa",
		IsNamespaced: true,
		Namespace:    "default",
		Type:         "ServiceAccount",
		Critical:     false,
	},
}
