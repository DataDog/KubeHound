# If you prefer the allow list template instead of the deny list, see community template:
# https://github.com/github/gitignore/blob/main/community/Golang/Go.AllowList.gitignore
#
# Binaries for programs and plugins
bin/
*.exe
*.exe~
*.dll
*.so
*.dylib
*.jar
*.class
*.lst

# Test binary, built with `go test -c`
*.test

# Output of the go coverage tool, specifically when used with LiteIDE
*.out

# Dependency directories (remove the comment below to include it)
# vendor/

# Go workspace file
go.work

# MacOS
.DS_Store

# Binaries
bin/
dist/

cmd/kubehound/kubehound
cmd/kubehound/__debug_bin
cmd/kubehound-ingestor/kubehound-ingestor
deployments/kubehound/data
deployments/kubehound/data/*

# System test json files
test/**/*.json

# Collected json files
scripts/collectors/**/*.json

# kind config
test/setup/.kube

# binary for the autogen of fixtures
test/system/generator/generator
*.env
*.kube-config
scripts/collectors/

# java
deployments/kubehound/kubegraph/dsl/kubehound/target

# personal settings
.vscode/settings.json

# RBAC certificates
test/setup/test-cluster/RBAC/

# poetry file
poetry.lock

###############################################################################
# Terraform Files
###############################################################################
# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc